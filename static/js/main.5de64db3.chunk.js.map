{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojisWeKnow","Object","keys","App","useState","meaning","setMeaning","className","onChange","event","userInput","target","value","undefined","map","emoji","style","fontSize","padding","margin","cursor","onClick","emojiClickHandler","rootElement","document","getElementById","createRoot","render"],"mappings":"iMAIMA,EAAkB,CACtB,eAAM,aAEN,eAAM,iBAEN,eAAM,eAEN,eAAM,eAEN,eAAM,eAEN,eAAM,eAEN,SAAK,cAEL,eAAM,eAEN,eAAM,SAEN,eAAM,QAEN,eAAM,aAEN,eAAM,WAGJC,EAAeC,OAAOC,KAAKH,GAEhB,SAASI,IACtB,MAA8BC,mBAAS,IAAG,mBAAnCC,EAAO,KAAEC,EAAU,KAoB1B,OACE,sBAAKC,UAAU,MAAK,UAClB,kDAEA,qBAAKA,UAAU,OAAM,sNAMrB,uBAAOC,SA5BX,SAA4BC,GAC1B,IAAIC,EAAYD,EAAME,OAAOC,MAEzBP,EAAUN,EAAgBW,QAEdG,IAAZR,IACFA,EAAU,+CAGZC,EAAWD,EACb,IAoBI,6BAAKA,IAEL,kDACCL,EAAac,KAAI,SAACC,GACjB,OACE,uBACEC,MAAO,CACLC,SAAU,OACVC,QAAS,eACTC,OAAQ,OACRC,OAAQ,WAGVC,QAAS,kBA/BnB,SAA2BN,GAGzBT,EAFcP,EAAgBgB,GAGhC,CA2ByBO,CAAkBP,EAAM,EAAC,UAEvCA,EAAO,MAHHA,EAMX,MAGN,CCjFA,IAAMQ,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACxB,EAAG,M","file":"static/js/main.5de64db3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./styles.css\";\n\nconst emojiDictionary = {\n  \"üèÄ\": \"Basketball\",\n\n  \"üèâ\": \"Rugby Football\",\n\n  \"üèè\": \"Cricket Game\",\n\n  \"ü•ä\": \"Boxing Glove\",\n\n  \"üèë\": \"Field Hockey\",\n\n  \"üèá\": \"Horse Racing\",\n\n  \"‚öΩ\": \"Soccer Ball\",\n\n  \"üõº\": \"Roller Skate\",\n\n  \"üèÜ\": \"Trophy\",\n\n  \"‚õ∑Ô∏è\": \"Skier\",\n\n  \"üõπ\": \"Skateboard\",\n\n  \"üé≥\": \"Bowling\"\n};\n\nvar emojisWeKnow = Object.keys(emojiDictionary);\n\nexport default function App() {\n  const [meaning, setMeaning] = useState(\"\");\n\n  function inputChangeHandler(event) {\n    var userInput = event.target.value;\n\n    var meaning = emojiDictionary[userInput];\n\n    if (meaning === undefined) {\n      meaning = \"This Emoji is not available in our database\";\n    }\n\n    setMeaning(meaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n\n    setMeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <nav> Activity Emoji</nav>\n\n      <div className=\"para\">\n        Do you also find it hard to figure out the meaning of emojis ?ü§î So\n        here's a emoji dictionary for you, wherein you can enter an emoji and we\n        will tell you its meaning in seconds.üòé\n      </div>\n\n      <input onChange={inputChangeHandler}></input>\n\n      <h2>{meaning}</h2>\n\n      <h3> emojis We Know </h3>\n      {emojisWeKnow.map((emoji) => {\n        return (\n          <span\n            style={{\n              fontSize: \"3rem\",\n              padding: \"1rem, 0.5rem\",\n              margin: \"1rem\",\n              cursor: \"Pointer\"\n            }}\n            key={emoji}\n            onClick={() => emojiClickHandler(emoji)}\n          >\n            {emoji}{\" \"}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}